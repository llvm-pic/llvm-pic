# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -mtriple=picmid -run-pass=instruction-select -verify-machineinstrs -o - %s | FileCheck %s

---
name: and_imm
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: and_imm
    ; CHECK: [[COPY:%[0-9]+]]:wc = COPY $w
    ; CHECK-NEXT: [[ADDImm:%[0-9]+]]:wc = G_ANDLW [[COPY]], 42
    ; CHECK-NEXT: G_RETURN implicit [[ADDImm]]
    %0:any(s8) = COPY $w
    %1:any(s8) = G_CONSTANT i8 42
    %2:any(s8) = G_AND %0, %1
    G_RETURN implicit %2

---
name: and_f
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: and_f
    ; CHECK: [[COPY:%[0-9]+]]:wc = COPY $w
    ; CHECK-NEXT: [[R0:%[0-9]+]]:imag = COPY $r0
    ; CHECK-NEXT: [[G_IORWF_F:%[0-9]+]]:imag = G_ANDWF_F [[COPY]], [[R0]]
    ; CHECK-NEXT: G_RETURN implicit [[G_IORWF_F]]
    %0:any(s8) = COPY $w
    %1:any(s8) = COPY $r0
    %2:any(s8) = G_AND %0, %1
    G_RETURN implicit %2

---
name: ior_imm
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ior_imm
    ; CHECK: [[COPY:%[0-9]+]]:wc = COPY $w
    ; CHECK-NEXT: [[ADDImm:%[0-9]+]]:wc = G_IORLW [[COPY]], 42
    ; CHECK-NEXT: G_RETURN implicit [[ADDImm]]
    %0:any(s8) = COPY $w
    %1:any(s8) = G_CONSTANT i8 42
    %2:any(s8) = G_OR %0, %1
    G_RETURN implicit %2

---
name: ior_f
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: ior_f
    ; CHECK: [[COPY:%[0-9]+]]:wc = COPY $w
    ; CHECK-NEXT: [[R0:%[0-9]+]]:imag = COPY $r0
    ; CHECK-NEXT: [[G_IORWF_F:%[0-9]+]]:imag = G_IORWF_F [[COPY]], [[R0]]
    ; CHECK-NEXT: G_RETURN implicit [[G_IORWF_F]]
    %0:any(s8) = COPY $w
    %1:any(s8) = COPY $r0
    %2:any(s8) = G_OR %0, %1
    G_RETURN implicit %2

---
name: xor_imm
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: xor_imm
    ; CHECK: [[COPY:%[0-9]+]]:wc = COPY $w
    ; CHECK-NEXT: [[G_XORLW:%[0-9]+]]:wc = G_XORLW [[COPY]], 42
    ; CHECK-NEXT: G_RETURN implicit [[G_XORLW]]
    %0:any(s8) = COPY $w
    %1:any(s8) = G_CONSTANT i8 42
    %2:any(s8) = G_XOR %0, %1
    G_RETURN implicit %2

---
name: xor_f
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: xor_f
    ; CHECK: [[COPY:%[0-9]+]]:wc = COPY $w
    ; CHECK-NEXT: [[R0:%[0-9]+]]:imag = COPY $r0
    ; CHECK-NEXT: [[G_XORWF_F:%[0-9]+]]:imag = G_XORWF_F [[COPY]], [[R0]]
    ; CHECK-NEXT: G_RETURN implicit [[G_XORWF_F]]
    %0:any(s8) = COPY $w
    %1:any(s8) = COPY $r0
    %2:any(s8) = G_XOR %0, %1
    G_RETURN implicit %2

---
name: comf_f
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: comf_f
    ; CHECK: [[COPY:%[0-9]+]]:imag = COPY $r0
    ; CHECK-NEXT: [[G_COMF_F:%[0-9]+]]:imag = G_COMF_F [[COPY]]
    ; CHECK-NEXT: G_RETURN implicit [[G_COMF_F]]
    %0:any(s8) = COPY $r0
    %1:any(s8) = G_CONSTANT i8 -1
    %2:any(s8) = G_XOR %0, %1
    G_RETURN implicit %2

---
name: rrf_f
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: rrf_f
    ; CHECK: [[COPY_Imag:%[0-9]+]]:imag = COPY $r0
    ; CHECK-NEXT: [[COPY_C:%[0-9]+]]:cc = COPY $c
    ; CHECK-NEXT: [[G_RRF_F:%[0-9]+]]:imag, [[CARRY_OUT:%[0-9]+]]:cc = G_RRF_F [[COPY_Imag]], [[COPY_C]]
    ; CHECK-NEXT: G_RETURN implicit [[G_RRF_F]]
    %0:any(s8) = COPY $r0
    %1:any(s1) = COPY $c
    %2:any(s8), %3:any(s1) = G_LSHRE %0, %1
    G_RETURN implicit %2

---
name: rlf_f
legalized: true
regBankSelected: true
body: |
  bb.0.entry:
    ; CHECK-LABEL: name: rlf_f
    ; CHECK: [[COPY_Imag:%[0-9]+]]:imag = COPY $r0
    ; CHECK-NEXT: [[COPY_C:%[0-9]+]]:cc = COPY $c
    ; CHECK-NEXT: [[G_RLF_F:%[0-9]+]]:imag, [[CARRY_OUT:%[0-9]+]]:cc = G_RLF_F [[COPY_Imag]], [[COPY_C]]
    ; CHECK-NEXT: G_RETURN implicit [[G_RLF_F]]
    %0:any(s8) = COPY $r0
    %1:any(s1) = COPY $c
    %2:any(s8), %3:any(s1) = G_SHLE %0, %1
    G_RETURN implicit %2
